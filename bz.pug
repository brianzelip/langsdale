doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    title Refactoring UB Langsdale Find Materials tiles
    link(rel="stylesheet" href="https://npmcdn.com/basscss@7.1.1/css/basscss.min.css")
    style.
      * {
        box-sizing: border-box;
      }
      body,
      .vh100 {
        min-height: 100vh;
      }
      .clearfix:after,
      .clearfix:before {
        content:" ";
        display:table;
      }
      .clearfix:after {
        clear:both;
      }
      .basis-100px {
        flex: 0 0 100px;
      }
      .rotate270 {
        transform: rotate(270deg);
      }
  body

    - const rowFloatTitle = 'Row-based float method'
    - const colFloatTitle = 'Column-based float method'
    - const rowFlexTitle = 'Row-based flexbox method'
    - const colFlexTitle = 'Column-based flexbox method'
    - const sectionIDs = [ { id: 'rowFloatTitle', title: rowFloatTitle }, { id: 'colFloatTitle', title: colFloatTitle }, { id: 'rowFlexTitle', title: rowFlexTitle }, { id: 'colFlexTitle',  title: colFlexTitle } ]
    - const books = { title: 'Books', img: 'http://langsdale.ubalt.edu/find-materials/uploads/images/books.png', text: 'Find books available at UB, or request books available at other USMAI schools.' }
    - const databases = { title: 'Databases', img: 'http://langsdale.ubalt.edu/find-materials/uploads/images/databases.png', text: 'Need to find scholarly, peer-reviewed articles?' }
    - const journals = { title: 'Journals', img: 'http://langsdale.ubalt.edu/find-materials/uploads/images/journals.png', text: 'Wondering if we have access to a specific journal (ex. New England Journal of Medicine)? Find out here.' }
    - const reserves = { title: 'Course Reserves', img: 'http://langsdale.ubalt.edu/find-materials/uploads/images/reserves.png', text: 'Access course textbooks available at Langsdale Library.' }
    - const ill = { title: 'Inter Library Loan', img: 'http://langsdale.ubalt.edu/find-materials/uploads/images/ill.png', text: 'Request books/articles from other libraries, or renew items you\'ve borrowed.' }
    - const kw = { title: 'Knowledge<wbr>Works<wbr>@UB', img: 'http://langsdale.ubalt.edu/find-materials/uploads/images/knowledge-works.png', text: 'Discover research and publications from UB faculty and graduate students.' }
    - const rowFloatSections = [ [books, databases], [journals, reserves], [ill, kw] ]
    - const colFloatSections = [ [ books, journals, ill ], [ databases, reserves, kw] ]
    - const rowFlexSections = [ books, databases, journals, reserves, ill, kw ]
    - const colFlexSections = colFloatSections

    header.container.p2#top
      h1 UB Langsdale 
        a(href="http://langsdale.ubalt.edu/find-materials/") Find Materials 
        .
          refactoring
      p.h2 Contents:
      ol
        each section in sectionIDs
          li.h3
            a.regular(href=`#${section.id}`)= section.title
    hr
    section.vh100.container.px2.mb3#rowFloatTitle
      nav.flex.mt3.mb3.flex-center
        h1.h2.mt0.mb0.mr3.italic.regular= rowFloatTitle
        a.h1(href="#top")
          span.rotate270.inline-block ➜
      style.
        .row-float-row {
          margin: 0 -1rem; /* "grid gutters" trick */
        }
        .row-float-column {
          margin-bottom: 1rem;
          padding: 0 1rem; /* "grid gutters" trick */
        }
        @media (min-width: 40em) {
          .row-float-column {
            float: left;
            width: 50%;
          }
        }
        .row-float-column__img {
          float: left;
          margin-right: 1rem;
        }
        .row-float-column__text-container {
          overflow: hidden;
          /* this overflow:hidden parent makes the
             .row-float-column__text
             NOT wrap underneath .row-float-column__img,
             but instead, stay within .row-float-column__text-container.
             If you remove this style, then make a narrow browser,
             you'll see that any .row-float-column__text
             with long enough text will start to wrap
             underneath its corresponding .row-float-column__img
           */
        }
        .row-float-column__title {
          margin-top: 0;
        }
      div
        each array in rowFloatSections
          .row-float-row.clearfix
            each section in array
              .row-float-column.clearfix
                img.row-float-column__img(src=section.img width=100)
                .row-float-column__text-container
                  h2.row-float-column__title
                    != section.title
                  p.row-float-column__text= section.text
    hr
    section.vh100.container.px2.mb3#colFloatTitle
      nav.flex.mt3.mb3.flex-center
        h1.h2.mt0.mb0.mr3.italic.regular= colFloatTitle
        a.h1(href="#top")
          span.rotate270.inline-block ➜
      style.
        .col-float-row {
          margin: 0 -1rem; /* "grid gutters" trick */
        }
        .col-float-column {
          padding: 0 1rem; /* "grid gutters" trick */
        }
        @media (min-width: 40em) {
          .col-float-column {
            float: left;
            width: 50%;
          }
        }
        .col-float-column-row {
          margin-bottom: 1rem;
        }
        .col-float-column-row__img {
          float: left;
          margin-right: 1rem;
        }
        .col-float-column-row__text-container {
          overflow: hidden;
          /* see comment about this above in
            .row-float-column__text-container
          */
        }
        .col-float-column-row__title {
          margin-top: 0;
        }
      .col-float-row.clearfix
        each array in colFloatSections
          .col-float-column.px2
            each section in array
              .col-float-column-row.clearfix
                img.col-float-column-row__img(src=section.img width=100)
                .col-float-column-row__text-container
                  h2.col-float-column-row__title
                    != section.title
                  p.col-float-column-row__text= section.text
    hr
    section.vh100.container.px2.mb3#rowFlexTitle
      nav.flex.mt3.mb3.flex-center
        h1.h2.mt0.mb0.mr3.italic.regular= rowFlexTitle
        a.h1(href="#top")
          span.rotate270.inline-block ➜
      style.
        .row-flex-container {
          flex-wrap: wrap;
          margin: 0 -1rem; /* "grid gutters" trick */
        }
        @media (min-width: 40em) {
          .row-flex-container {
            display: flex;
          }
        }
        .row-flex-item {
          display: flex;
          margin-bottom: 1rem;
          padding: 0 1rem; /* "grid gutters" trick */
        }
        @media (min-width: 40em) {
          .row-flex-item {
            width: 50%;
          }
        }
        .row-flex-item__img-container {
          flex: 0 0 100px; /* shorthand that uses
                              flex-basis to keep the image at 100px */
          margin-right: 1rem;
        }
        .row-flex-item__text-container {
          display: flex;
          flex-direction: column;
        }
        .row-flex-item__title {
          margin-top: 0;
        }
      .row-flex-container
        each section in rowFlexSections
          .row-flex-item
            .row-flex-item__img-container
              img.row-flex-item__img(src=section.img)
            .row-flex-item__text-container
              h2.row-flex-item__title
                != section.title
              p.row-flex-item__text= section.text
    hr
    section.vh100.container.px2#colFlexTitle
      nav.flex.flex-center.mt3.mb3
        h1.h2.mt0.mb0.mr3.italic.regular= colFlexTitle
        a.h1(href="#top")
          span.rotate270.inline-block ➜
      .sm-flex.flex-wrap.mxn2
        each array in colFlexSections
          .flex.flex-column.sm-col-6.px2
            each section in array
              .flex.mb2
                .basis-100px.mr2
                  img(src=section.img)
                div.flex.flex-column
                  h2.mt0
                    != section.title
                  p= section.text
